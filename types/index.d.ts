declare namespace _exports {
    export { MigrationScriptArguments, MigrationScriptCallback, MigrationHelpers, MigrationLifecycleFunctions, MigrateInstanceOptions };
}
declare namespace _exports {
    export { version };
    export { cli };
    export { CONFIG };
    export { logger };
    export { Environment };
    export { migrateInstance };
    export { runMigrationScript };
    export { runMigrationScriptText };
    export { B2C_MIGRATION_HELPERS };
    export { syncCartridges };
    export { findCartridges };
    export { executeJob };
    export { waitForJob };
    export { sleep };
    export { siteArchiveImport };
    export { siteArchiveExport };
    export { siteArchiveExportJSON };
    export { siteArchiveImportJSON };
    export { siteArchiveExportText };
    export { siteArchiveImportText };
    export { ensureDataAPIPermissions };
    export { runAsScript };
    export { parseConfig };
    export { getInstanceInfo };
    export { getInstancePreferenceInfo };
    export { getInstanceFeatureState };
    export { collectFeatures };
    export { deployFeature };
    export { removeFeature };
    export { updateFeatureState };
    export let commands: {
        command: string;
        desc: string;
        builder: (yargs: any) => any;
    }[];
}
export = _exports;
type MigrationScriptArguments = import('./migrations').MigrationScriptArguments;
type MigrationScriptCallback = import('./migrations').MigrationScriptCallback;
type MigrationHelpers = import('./migrations').MigrationHelpers;
type MigrationLifecycleFunctions = import('./migrations').MigrationLifecycleFunctions;
type MigrateInstanceOptions = import('./migrations').MigrateInstanceOptions;
import { cli } from "./config";
import CONFIG = require("./global-config");
import logger = require("./logger");
import Environment = require("./environment");
import { migrateInstance } from "./migrations";
import { runMigrationScript } from "./migrations";
import { runMigrationScriptText } from "./migrations";
import { B2C_MIGRATION_HELPERS } from "./migrations";
import { syncCartridges } from "./code";
import { findCartridges } from "./code";
import { executeJob } from "./jobs";
import { waitForJob } from "./jobs";
import { sleep } from "./util";
import { siteArchiveImport } from "./jobs";
import { siteArchiveExport } from "./jobs";
import { siteArchiveExportJSON } from "./jobs";
import { siteArchiveImportJSON } from "./jobs";
import { siteArchiveExportText } from "./jobs";
import { siteArchiveImportText } from "./jobs";
import { ensureDataAPIPermissions } from "./jobs";
import { runAsScript } from "./config";
import { parseConfig } from "./config";
import { getInstanceInfo } from "./info";
import { getInstancePreferenceInfo } from "./info";
import { getInstanceFeatureState } from "./features";
import { collectFeatures } from "./features";
import { deployFeature } from "./features";
import { removeFeature } from "./features";
import { updateFeatureState } from "./features";
//# sourceMappingURL=index.d.ts.map